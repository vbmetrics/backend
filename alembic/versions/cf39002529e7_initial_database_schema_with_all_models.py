"""Initial database schema with all models

Revision ID: cf39002529e7
Revises: 
Create Date: 2025-08-07 23:21:00.139740

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'cf39002529e7'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('alpha_2_code', sa.CHAR(length=2), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('alpha_2_code'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_countries_alpha_2_code'), 'countries', ['alpha_2_code'], unique=False)
    op.create_table('seasons',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('type', sa.Enum('club', 'national', name='seasontype'), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('arenas',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.CheckConstraint('capacity > 0', name='positive_capacity'),
    sa.ForeignKeyConstraint(['country_code'], ['countries.alpha_2_code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('players',
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('height_cm', sa.Integer(), nullable=True),
    sa.Column('weight_kg', sa.Integer(), nullable=True),
    sa.Column('playing_position', sa.Enum('setter', 'opposite', 'outside_hitter', 'middle_blocker', 'libero', name='playerposition'), nullable=True),
    sa.Column('dominant_hand', sa.Enum('right', 'left', 'ambidextrous', name='playerhand'), nullable=True),
    sa.Column('spike_reach_cm', sa.Integer(), nullable=True),
    sa.Column('block_reach_cm', sa.Integer(), nullable=True),
    sa.Column('photo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nationality_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.CheckConstraint('block_reach_cm > 0', name='positive_block_reach'),
    sa.CheckConstraint('height_cm > 0', name='positive_height'),
    sa.CheckConstraint('spike_reach_cm > 0', name='positive_spike_reach'),
    sa.CheckConstraint('weight_kg > 0', name='positive_weight'),
    sa.ForeignKeyConstraint(['nationality_code'], ['countries.alpha_2_code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_members',
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('role_type', sa.Enum('head_coach', 'assistant', name='staffroletype'), nullable=True),
    sa.Column('nationality_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['nationality_code'], ['countries.alpha_2_code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teams',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('team_type', sa.Enum('club', 'national', name='teamtype'), nullable=True),
    sa.Column('logo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('website_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('country_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('home_arena_id', sa.Uuid(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['country_code'], ['countries.alpha_2_code'], ),
    sa.ForeignKeyConstraint(['home_arena_id'], ['arenas.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('player_team_history',
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('jersey_number', sa.Integer(), nullable=True),
    sa.Column('player_id', sa.Uuid(), nullable=False),
    sa.Column('team_id', sa.Uuid(), nullable=False),
    sa.Column('season_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['player_id'], ['players.id'], ),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('staff_team_history',
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('staff_member_id', sa.Uuid(), nullable=False),
    sa.Column('team_id', sa.Uuid(), nullable=False),
    sa.Column('season_id', sa.Uuid(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['season_id'], ['seasons.id'], ),
    sa.ForeignKeyConstraint(['staff_member_id'], ['staff_members.id'], ),
    sa.ForeignKeyConstraint(['team_id'], ['teams.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('staff_team_history')
    op.drop_table('player_team_history')
    op.drop_table('teams')
    op.drop_table('staff_members')
    op.drop_table('players')
    op.drop_table('arenas')
    op.drop_table('seasons')
    op.drop_index(op.f('ix_countries_alpha_2_code'), table_name='countries')
    op.drop_table('countries')
    # ### end Alembic commands ###
